{"version":3,"sources":["components/date.js","components/current-date.js","components/day.js","components/weather-data.js","services/weather.js","components/app-background.js","services/forecast.js","App.js","reportWebVitals.js","index.js"],"names":["date","Date","dayMonth","getDate","weekday","getDay","month","getMonth","currentWeekDay","currentMonth","CurrentDateStyled","styled","div","CurrentDate","weather","currentDate","console","log","degreesCelsius","Math","floor","main","temp","location","sys","country","name","className","src","process","alt","day","number","currentday","WeatherDataStyled","WeatherData","weatherForecast","useState","hourlyWeather","setHourlyWeather","tempMin","temp_min","tempMax","temp_max","humidity","windSpeed","wind","speed","toFixed","dia0","list","slice","dia1","dia2","dia3","dia4","weatherPerDay","setWeatherPerDay","printDataByDate","dia","document","querySelectorAll","forEach","tag","classList","remove","getElementById","add","onClick","style","bottom","id","map","weatherImage","toLowerCase","dt_txt","hours","getHours","minutes","getMinutes","currenthour","toString","padStart","weatherItem","contains","weatherDataAccordingToTime","API_KEY","BASE_API","lat","lon","a","fetch","response","ok","Error","json","data","getWeather","appBackgroundImage","currentHour","setCurrentHour","app","currentWeather","setTimeout","backgroundImage","getWeatherForecastFor5Days","AppStyled","App","setWeather","setWeatherForecast","loading","setLoading","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e7316de.chunk.js","sourcesContent":["function date() {\n  const date = new Date(); // retorna la fecha actual\n  const dayMonth = date.getDate(); //retorna el dia del mes  1 a 31\n  const weekday = date.getDay(); //retorna el dia de la semana  0-domingo 6-sabado\n  const month = date.getMonth() + 1; // retorna el mes acuatual donde 0 es enero y 11 diciembre\n\n  let currentWeekDay = \"\";\n  let currentMonth = \"\";\n  if (weekday === 0) {\n    currentWeekDay = \"Domingo\";\n  }\n  if (weekday === 1) {\n    currentWeekDay = \"Lunes\";\n  }\n  if (weekday === 2) {\n    currentWeekDay = \"Martes\";\n  }\n  if (weekday === 3) {\n    currentWeekDay = \"Miercoles\";\n  }\n  if (weekday === 4) {\n    currentWeekDay = \"Jueves\";\n  }\n  if (weekday === 5) {\n    currentWeekDay = \"Viernes\";\n  }\n  if (weekday === 6) {\n    currentWeekDay = \"Sabado\";\n  }\n\n  if (month === 1) {\n    currentMonth = \"Enero\";\n  }\n  if (month === 2) {\n    currentMonth = \"Febrero\";\n  }\n  if (month === 3) {\n    currentMonth = \"Marzo\";\n  }\n  if (month === 4) {\n    currentMonth = \"Abril\";\n  }\n  if (month === 5) {\n    currentMonth = \"Mayo\";\n  }\n  if (month === 6) {\n    currentMonth = \"Junio\";\n  }\n  if (month === 7) {\n    currentMonth = \"Julio\";\n  }\n  if (month === 8) {\n    currentMonth = \"Agosto\";\n  }\n  if (month === 9) {\n    currentMonth = \"Septiembre\";\n  }\n  if (month === 10) {\n    currentMonth = \"Octubre\";\n  }\n  if (month === 11) {\n    currentMonth = \"Noviembre\";\n  }\n  if (month === 12) {\n    currentMonth = \"Diciembre\";\n  }\n\n  const currentDate = `${currentWeekDay} ${dayMonth} de ${currentMonth}`;\n  return currentDate;\n}\n\nexport default date;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport date from \"./date\";\nconst CurrentDateStyled = styled.div`\n  display: flex;\n  width: 17rem;\n  height: 5.62rem;\n  margin: auto;\n  position: absolute;\n  bottom: calc(1.25rem + 360px);\n  background: linear-gradient(90deg, #536976 0%, #292e49 100%);\n  color: var(--white);\n  padding: 1rem 1.5rem;\n  box-sizing: border-box;\n  gap: 1rem;\n  border-radius: 0.5rem;\n  left: calc(50% - (17rem / 2));\n  * {\n    margin: 0;\n  }\n  .current-date-right {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    justify-content: center;\n  }\n  .degreesCelsius {\n    font: 400 normal 50px/43px \"Nunito\", sans-serif;\n    display: flex;\n    align-items: center;\n  }\n  .day {\n    font: var(--caption-caption);\n    margin-block-end: 0.75rem;\n  }\n  .country {\n    font: var(--caption-caption);\n    display: flex;\n    gap: 0.25rem;\n  }\n  .country img {\n    vertical-align: middle;\n    object-fit: cover;\n  }\n`;\n\nfunction CurrentDate({ weather }) {\n  const currentDate = date();\n  console.log(currentDate);\n  const degreesCelsius = Math.floor(weather.main.temp - 273.15);\n  const location = `${weather.sys.country} ${weather.name}`;\n  return (\n    <CurrentDateStyled>\n      <div className=\"degreesCelsius\">{degreesCelsius}°</div>\n      <div className=\"current-date-right\">\n        <p className=\"day\">{currentDate}</p>\n        <div className=\"country\">\n          <img src={`${process.env.PUBLIC_URL}/icons/lugar.png`} alt=\"point\" />\n          <p>{location}</p>\n        </div>\n      </div>\n    </CurrentDateStyled>\n  );\n}\n\nexport default CurrentDate;\n","function day(number) {\n  const date = new Date();\n  const day = date.getDay() + number;\n  let currentday = \"\";\n  if (day === 0) {\n    return (currentday = \"Domingo\");\n  }\n  if (day === 1) {\n    return (currentday = \"Lunes\");\n  }\n  if (day === 2) {\n    return (currentday = \"Martes\");\n  }\n  if (day === 3) {\n    return (currentday = \"Miércoles\");\n  }\n  if (day === 4) {\n    return (currentday = \"Jueves\");\n  }\n  if (day === 5) {\n    return (currentday = \"Viernes\");\n  }\n  if (day === 6) {\n    return (currentday = \"Sábado\");\n  }\n\n  return currentday;\n}\n\nexport default day;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport day from \"./day\";\n\nconst WeatherDataStyled = styled.div`\n  position: absolute;\n  bottom: -290px;\n  height: 360px;\n  width: 100%;\n  background: var(--bg);\n  color: var(--white);\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n  padding: 1.75rem 0 1rem;\n  box-sizing: border-box;\n  .component {\n    bottom: 0;\n  }\n  * {\n    margin: 0;\n  }\n  ::before {\n    content: \"\";\n    width: 4rem;\n    height: 0.5rem;\n    background: var(--white);\n    border-radius: 0.25rem;\n    position: absolute;\n    right: calc(50% - 2rem);\n    top: 0.5rem;\n    cursor: pointer;\n  }\n  .weather-temperature {\n    display: flex;\n    gap: 1rem;\n    overflow: auto;\n    scroll-snap-type: x mandatory;\n    padding: 0 1rem;\n    margin: 2rem 0 1rem;\n    box-sizing: border-box;\n  }\n  .weather-data {\n    border: 3px solid transparent;\n    scroll-snap-align: center;\n    background: var(--black);\n    padding: 1rem 12px;\n    border-radius: 60px;\n    width: 65px;\n    align-items: center;\n    justify-content: center;\n    text-transform: capitalize;\n    font: var(--body2-regular);\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    box-sizing: border-box;\n    height: 130px;\n  }\n  .weather-data.is-active {\n    border: 3px solid var(--primary);\n  }\n  .weather-day-container {\n    display: flex;\n    gap: 1.5rem;\n    padding: 0 1rem;\n    justify-content: space-between;\n  }\n  .weather-day {\n    font: var(--body1-bold);\n    padding-bottom: 0.5rem;\n    text-transform: capitalize;\n    cursor: pointer;\n  }\n  .weather-day.is-active {\n    color: var(--primary);\n    border-bottom: 4px solid var(--primary);\n  }\n  .weather-more-info {\n    display: flex;\n    justify-content: space-between;\n    padding: 1rem;\n  }\n  .weather-more-info div p {\n    color: var(--white);\n    text-transform: capitalize;\n    font: var(--body1-regular);\n  }\n  .weather-more-info div p b {\n    color: var(--white);\n    font: var(--body1-bold);\n    text-transform: none;\n  }\n  .info {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  .info b {\n    padding-left: 5px;\n  }\n`;\n\nfunction WeatherData({ weather, weatherForecast }) {\n  const [hourlyWeather, setHourlyWeather] = useState([false, \"\"]);\n  const tempMin = Math.floor(weather.main.temp_min - 273.15);\n  const tempMax = Math.floor(weather.main.temp_max - 273.15);\n  const humidity = weather.main.humidity;\n  const windSpeed = (weather.wind.speed * 3.6).toFixed(2);\n  // console.log(weatherForecast);\n  const dia0 = weatherForecast.list.slice(0, 8);\n  const dia1 = weatherForecast.list.slice(8, 16);\n  const dia2 = weatherForecast.list.slice(16, 24);\n  const dia3 = weatherForecast.list.slice(24, 32);\n  const dia4 = weatherForecast.list.slice(32, 40);\n\n  const [weatherPerDay, setWeatherPerDay] = useState(dia0);\n\n  function handleClickComponent() {\n    const weather = document.getElementById(\"Weather\");\n    weather.style.bottom = 0;\n    // weather.classList.add(\"animate__backInUp\");\n  }\n\n  function printDataByDate(number, dia) {\n    setWeatherPerDay(dia);\n\n    const todos = document.querySelectorAll(\".weather-day\");\n    todos.forEach((tag) => {\n      tag.classList.remove(\"is-active\");\n    });\n\n    const element1 = document.getElementById(`element${number}`);\n    element1.classList.add(\"is-active\");\n  }\n\n  function weatherDataAccordingToTime(weather) {\n    console.log(weather);\n    const weatherItem = document.getElementById(weather.dt_txt);\n    setHourlyWeather([true, weather]);\n    if (weatherItem.classList.contains(\"is-active\")) {\n      weatherItem.classList.remove(\"is-active\");\n    } else {\n      weatherItem.classList.add(\"is-active\");\n    }\n  }\n\n  return (\n    <WeatherDataStyled onClick={handleClickComponent} id=\"Weather\">\n      <div className=\"weather-day-container\">\n        <h2\n          className=\"weather-day\"\n          id=\"element0\"\n          onClick={() => {\n            printDataByDate(\"0\", dia0);\n          }}\n        >\n          {day(0)}\n        </h2>\n        <h2\n          className=\"weather-day\"\n          id=\"element1\"\n          onClick={() => {\n            printDataByDate(\"1\", dia1);\n          }}\n        >\n          {day(1)}\n        </h2>\n        <h2\n          className=\"weather-day\"\n          id=\"element2\"\n          onClick={() => {\n            printDataByDate(\"2\", dia2);\n          }}\n        >\n          {day(2)}\n        </h2>\n        <h2\n          className=\"weather-day\"\n          id=\"element3\"\n          onClick={() => {\n            printDataByDate(\"3\", dia3);\n          }}\n        >\n          {day(3)}\n        </h2>\n        <h2\n          className=\"weather-day\"\n          id=\"element4\"\n          onClick={() => {\n            printDataByDate(\"4\", dia4);\n          }}\n        >\n          {day(4)}\n        </h2>\n      </div>\n      <div className=\"weather-temperature\">\n        {weatherPerDay.map((weather) => {\n          const degreesCelsius = Math.floor(weather.main.temp - 273.15);\n          const weatherImage = weather.weather[0].main.toLowerCase();\n          const date = new Date(weather.dt_txt);\n          const hours = date.getHours();\n          const minutes = date.getMinutes();\n          const currenthour = `${hours.toString().padStart(2, \"00\")}:${minutes\n            .toString()\n            .padStart(2, \"00\")}`;\n          return (\n            <div\n              key={weather.dt_txt}\n              className=\"weather-data\"\n              id={weather.dt_txt}\n              onClick={() => {\n                weatherDataAccordingToTime(weather);\n              }}\n            >\n              <p>{currenthour}</p>\n              <img\n                src={`${process.env.PUBLIC_URL}/icons/${weatherImage}.svg`}\n                alt=\"\"\n              />\n              <p className=\"degrees-celsius\">{degreesCelsius}°</p>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"weather-more-info\">\n        <div className=\"info left\">\n          <p>\n            máx:\n            <b>\n              {hourlyWeather[0]\n                ? Math.floor(weather.main.temp_max - 273.15)\n                : tempMax}\n              °\n            </b>\n          </p>\n          <p>\n            viento:\n            <b>\n              {hourlyWeather[0]\n                ? (weather.wind.speed * 3.6).toFixed(2)\n                : windSpeed}\n              Km-h\n            </b>\n          </p>\n        </div>\n        <div className=\"info right\">\n          <p>\n            min:\n            <b>\n              {hourlyWeather[0]\n                ? Math.floor(hourlyWeather[1].main.temp_min - 273.15)\n                : tempMin}\n              °\n            </b>\n          </p>\n          <p>\n            humedad:\n            <b>{hourlyWeather[0] ? weather.main.humidity : humidity}%</b>\n          </p>\n        </div>\n      </div>\n    </WeatherDataStyled>\n  );\n}\n\nexport default WeatherData;\n","const API_KEY = \"091ec36883705339db6f4e5fbef580dc\";\nconst BASE_API = \"https://api.openweathermap.org/data/2.5\";\n\nasync function getWeather(lat, lon) {\n  const response = await fetch(\n    `${BASE_API}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}` //datos meteorologicos actuales segun la ubicacion\n  );\n  if (!response.ok) {\n    throw new Error(\"no jalo el fetch\");\n  }\n  const data = await response.json();\n  return data;\n}\nexport default getWeather;\n","function appBackgroundImage(weather, currentHour, setCurrentHour) {\n  const app = document.getElementById(\"app\");\n  const currentWeather = weather.weather[0].main.toLowerCase();\n\n  setTimeout(() => {\n    const date = new Date(); // retorna la fecha actual\n    const hours = date.getHours(); // retorna la hora actual\n    if (hours === 19) {\n      return setCurrentHour(true);\n    }\n  }, 100);\n\n  if (currentWeather === \"drizzle\") {\n    if (currentHour) {\n      return (app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/drizzle-night.jpg)`);\n    }\n    app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/drizzle.jpg)`;\n  }\n  if (currentWeather === \"clear\") {\n    if (currentHour) {\n      return (app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/clear-night.jpg)`);\n    }\n    app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/clear.jpg)`;\n  }\n  if (currentWeather === \"wind\") {\n    if (currentHour) {\n      return (app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/wind-night.jpg)`);\n    }\n    app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/wind.jpg)`;\n  }\n  if (currentWeather === \"clouds\") {\n    if (currentHour) {\n      return (app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/clouds-night.jpg)`);\n    }\n    app.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/clouds.jpg)`;\n  }\n}\n\nexport default appBackgroundImage;\n","const API_KEY = \"091ec36883705339db6f4e5fbef580dc\";\nconst BASE_API = \"https://api.openweathermap.org/data/2.5\";\n\nasync function getWeatherForecastFor5Days(lat, lon) {\n  const response = await fetch(\n    `${BASE_API}/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(\"fetch fallido de la funcion getWeatherForecastFor5Days\");\n  }\n  const data = await response.json();\n  return data;\n}\nexport default getWeatherForecastFor5Days;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CurrentDate from \"./components/current-date\";\nimport WeatherData from \"./components/weather-data\";\nimport getWeather from \"./services/weather\";\nimport appBackgroundImage from \"./components/app-background\";\nimport getWeatherForecastFor5Days from \"./services/forecast\";\n// import getWeatherForecastFor16Days from \"./services/forecast-16-days\"; no autorizado\n// `${process.env.PUBLIC_URL}/icons/soleado.svg`;\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-image: url(${process.env.PUBLIC_URL}/images/clear-day.jpg);\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  overflow: hidden;\n`;\nconst date = new Date();\nconst currentDay = date.getDay();\nconst currentDate = date.getDate();\nconst currentMonth = date.getMonth();\n\n// console.log(currentDate);\n// console.log(currentDay); //0-6 index\n// console.log(currentMonth); //0-11 index\n\nfunction App() {\n  const [weather, setWeather] = useState(\"\");\n  const [weatherForecast, setWeatherForecast] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentHour, setCurrentHour] = useState(false);\n\n  if (loading) {\n    appBackgroundImage(weather, currentHour, setCurrentHour);\n  }\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const weather = await getWeather(lat, lon);\n        const weatherForecast = await getWeatherForecastFor5Days(lat, lon);\n        setWeather(weather);\n        setWeatherForecast(weatherForecast);\n        setLoading(true);\n      });\n    } else {\n      alert(\"el usuario no dio acceso a su ubicación\");\n    }\n  }, []);\n\n  return (\n    <AppStyled id=\"app\">\n      {loading ? <CurrentDate weather={weather} /> : \"cargando\"}\n      {loading ? (\n        <WeatherData weather={weather} weatherForecast={weatherForecast} />\n      ) : (\n        \"\"\n      )}\n    </AppStyled>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}