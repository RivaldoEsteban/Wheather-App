{"version":3,"sources":["components/current-date.js","soleado.jpg","services/weather.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentDateStyled","styled","div","CurrentDate","country","degrees","className","src","alt","position","setCountry","setDegrees","setData","a","coords","latitude","lat","longitude","lon","fetch","response","ok","json","data","grados","Math","floor","main","temp","sys","name","getWeather","AppStyled","soleado","date","Date","currentDay","getDay","currentDate","getDate","currentMonth","getMonth","console","log","App","useState","navigator","geolocation","getCurrentPosition","alert","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGMA,EAAoBC,IAAOC,IAAV,wnBAgDRC,MAff,YAAyC,IAAnBC,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,QAC5B,OACE,eAACL,EAAD,WACE,qBAAKM,UAAU,OAAf,SAAuBD,IACvB,sBAAKC,UAAU,qBAAf,UACE,mBAAGA,UAAU,MAAb,gCACA,sBAAKA,UAAU,UAAf,UACE,qBAAKC,IAAI,oBAAoBC,IAAI,UACjC,4BAAIJ,cC5CC,MAA0B,oC,oECAzC,WAA0BK,EAASC,EAAWC,EAAWC,GAAzD,uBAAAC,EAAA,sEACoBJ,EAASK,OAAOC,SADpC,cACQC,EADR,gBAEoBP,EAASK,OAAOG,UAFpC,cAEQC,EAFR,OAGc,mCAHd,SAIyBC,MAAM,uDAAD,OAC6BH,EAD7B,gBACwCE,EADxC,kBADhB,qCAHd,UAQoB,IAJZE,EAJR,QAQcC,GARd,kCASuBD,EAASE,OAThC,QASUC,EATV,OAUUC,EAAUC,KAAKC,MAAMH,EAAKI,KAAKC,KAAQ,QAC7CjB,EAAWa,GACXd,EAAW,GAAD,OAAIa,EAAKM,IAAIzB,QAAb,YAAwBmB,EAAKO,OACvClB,EAAQQ,EAASC,IAbrB,wBAeIT,EAAQQ,EAASC,IAfrB,6C,sBAkBeU,I,EAAAA,E,kDCZTC,EAAY/B,IAAOC,IAAV,gLAGW+B,GAKpBC,EAAO,IAAIC,KACXC,EAAaF,EAAKG,SAClBC,EAAcJ,EAAKK,UACnBC,EAAeN,EAAKO,WAC1BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIP,GACZM,QAAQC,IAAIH,GA0BGI,MAxBf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNzC,EADM,KACGM,EADH,OAEiBmC,mBAAS,IAF1B,mBAENxC,EAFM,KAEGM,EAFH,OAGWkC,qBAHX,mBAGNtB,EAHM,KAGAX,EAHA,KAYb,MAPI,gBAAiBkC,UACnBA,UAAUC,YAAYC,oBAAmB,SAACvC,GACxCsB,EAAWtB,EAASC,EAAWC,EAAWC,MAG5CqC,MAAM,8CAGN,eAACjB,EAAD,WAEIT,EAAO,cAAC,EAAD,CAAanB,QAASA,EAASC,QAASA,IAAa,WAE9D,qBAAKC,UAAU,GAAf,SACE,qBAAKC,IAAI,qBAAqB2C,MAAM,MAAMC,OAAO,MAAM3C,IAAI,kBC5BpD4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6db22c85.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst CurrentDateStyled = styled.div`\n  display: flex;\n  width: 14.68rem;\n  height: 5.62rem;\n  margin: auto;\n  position: absolute;\n  bottom: 1.25rem;\n  background: linear-gradient(90deg, #536976 0%, #292E49 100%);\n  color: var(--white);\n  padding: 1.5rem;\n  box-sizing: border-box;\n  gap: 1rem;\n  border-radius: .5rem;\n  left: calc(50% - (14.68rem/2) );\n  * {\n    margin: 0;\n  }\n\n  .date {\n    font: 400 normal 56px/43px 'Nunito', sans-serif;\n  }\n  .day{\n    font: var(--caption-caption);\n    margin-block-end: 0.75rem;\n  }\n  .country {\n    font: var(--caption-caption);\n    display: flex;\n    gap: .25rem;\n  }\n\n`\n\nfunction CurrentDate({country,degrees}) {\n  return (\n    <CurrentDateStyled>\n      <div className=\"date\">{degrees}</div>\n      <div className=\"current-date-right\">\n        <p className=\"day\">jueves,15 de julio</p>\n        <div className=\"country\">\n          <img src=\"./icons/lugar.png\" alt=\"point\"/>\n          <p>{country}</p>\n        </div>\n      </div>\n    </CurrentDateStyled>\n  )\n}\n\nexport default CurrentDate\n","export default __webpack_public_path__ + \"static/media/soleado.1c18270a.jpg\";","async function getWeather(position,setCountry,setDegrees,setData) {\n  const lat = await position.coords.latitude;\n  const lon = await position.coords.longitude;\n  const key = \"091ec36883705339db6f4e5fbef580dc\";\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}` //datos meteorologicos actuales segun la ubicacion\n  );\n\n  if(response.ok == true) {\n    const data = await response.json();\n    const grados =  Math.floor(data.main.temp -  273.15);\n    setDegrees(grados)\n    setCountry(`${data.sys.country} ${data.name}`)\n    setData(response.ok)\n  } else {\n    setData(response.ok)\n  }\n}\nexport default getWeather;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport  CurrentDate from './components/current-date'\nimport soleado from \"./soleado.jpg\";\nimport getWeather from \"./services/weather\";\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-image: url(${soleado});\n  background-position: center;\n  background-size: cover;\n  position: relative ;\n`;\nconst date = new Date();\nconst currentDay = date.getDay()\nconst currentDate = date.getDate()\nconst currentMonth = date.getMonth()\nconsole.log(currentDate)\nconsole.log(currentDay)//0-6 index\nconsole.log(currentMonth) //0-11 index\n\nfunction App() {\n  const [country, setCountry] = useState('')\n  const [degrees, setDegrees] = useState('')\n  const [data, setData] = useState()\n\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      getWeather(position,setCountry,setDegrees,setData);\n    });\n  } else {\n    alert(\"el usuario no dio acceso a su ubicaci√≥n\");\n  }\n  return (\n    <AppStyled>\n      {\n        data ? <CurrentDate country={country} degrees={degrees}/> : \"cargando\"\n      }\n      <div className=''>\n        <img src=\"images/parcial.jpg\" width='500' height='500' alt=\"imagedd\" />\n      </div>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}