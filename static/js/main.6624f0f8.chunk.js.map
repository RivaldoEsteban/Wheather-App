{"version":3,"sources":["soleado.jpg","services/weather.js","App.js","reportWebVitals.js","index.js"],"names":["position","a","coords","latitude","lat","longitude","lon","fetch","response","json","data","console","log","getWeather","AppStyled","styled","div","soleado","App","navigator","geolocation","getCurrentPosition","alert","className","src","alt","aria-hidden","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,MAA0B,oC,mECAzC,WAA0BA,GAA1B,qBAAAC,EAAA,sEACoBD,EAASE,OAAOC,SADpC,cACQC,EADR,gBAEoBJ,EAASE,OAAOG,UAFpC,cAEQC,EAFR,OAGc,mCAHd,SAIyBC,MAAM,uDAAD,OAC6BH,EAD7B,gBACwCE,EADxC,kBADhB,qCAHd,cAIQE,EAJR,iBAOqBA,EAASC,OAP9B,QAOQC,EAPR,OAQEC,QAAQC,IAAIF,GARd,6C,sBAUeG,I,EAAAA,E,mDCLTC,EAAYC,IAAOC,IAAV,w1BAKWC,GA4DXC,MA1Bf,WAUE,MAPI,gBAAiBC,UACnBA,UAAUC,YAAYC,oBAAmB,SAACrB,GACxCa,EAAWb,MAGbsB,MAAM,8CAGN,cAACR,EAAD,UACE,sBAAKS,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,gBACA,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,MAAb,gCACA,sBAAKA,UAAU,WAAf,UACE,qBAAKC,IAAI,oBAAoBC,IAAI,QAASC,cAAY,SACtD,kCClDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6624f0f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/soleado.1c18270a.jpg\";","async function getWeather(position) {\n  const lat = await position.coords.latitude;\n  const lon = await position.coords.longitude;\n  const key = \"091ec36883705339db6f4e5fbef580dc\";\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}` //datos meteorologicos actuales segun la ubicacion\n  );\n  const data = await response.json();\n  console.log(data);\n}\nexport default getWeather;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport soleado from \"./soleado.jpg\";\nimport getWeather from \"./services/weather\";\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  width: 100vw;\n  border: 1px solid red;\n  box-sizing: border-box;\n  background-image: url(${soleado});\n  background-position: center;\n  background-size: cover;\n  position: relative ;\n  .current-date {\n    display: flex;\n    width: 14.68rem;\n    height: 5.62rem;\n    margin: auto;\n    position: absolute;\n    bottom: 1.25rem;\n    background: linear-gradient(90deg, #536976 0%, #292E49 100%);\n    color: var(--white);\n    padding: 1.5rem;\n    box-sizing: border-box;\n    gap: 1rem;\n    border-radius: .5rem;\n    left: calc(50% - (14.68rem/2) );\n  }\n  .current-date * {\n    margin: 0;\n  }\n  .date {\n    font: 400 normal 56px/43px 'Nunito', sans-serif;\n  }\n  .day{\n    font: var(--caption-caption);\n    margin-block-end: 0.75rem;\n  }\n  .location {\n    font: var(--caption-caption);\n  }\n`;\n\nfunction App() {\n  // const date = new Date();\n  // console.log(date.getDay());\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      getWeather(position);\n    });\n  } else {\n    alert(\"el usuario no dio acceso a su ubicaci√≥n\");\n  }\n  return (\n    <AppStyled>\n      <div className=\"current-date\">\n        <div className=\"date\">25</div>\n        <div className=\"current-date-right\">\n          <p className=\"day\">jueves,15 de julio</p>\n          <div className=\"location\">\n            <img src=\"./icons/point.svg\" alt=\"point\"  aria-hidden='true'/>\n            <p></p>\n          </div>\n        </div>\n      </div>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}